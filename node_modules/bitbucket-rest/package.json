{
  "name": "bitbucket-rest",
  "version": "0.0.1",
  "description": "A package to access the BitBucket REST API.",
  "author": {
    "name": "Dhinesh Sornakili",
    "email": "dinesh.jeph@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "https://bitbucket.org/dineshjeph/bitbucket-rest.git"
  },
  "main": "index.js",
  "dependencies": {
    "mustache": "0.7.3",
    "unirest": "0.0.9"
  },
  "engines": {
    "node": "*"
  },
  "_id": "bitbucket-rest@0.0.1",
  "_from": "bitbucket-rest@0.0.1",
  "readme": "## Bitbucket Nodejs Library\r\n \r\n  This is nodejs module to use the functionalities of repository, deploy-keys, service hooks in bitbucket. Bitbucket's native REST API, both [version 1](https://confluence.atlassian.com/display/BITBUCKET/Version+1) & [version 2](https://confluence.atlassian.com/display/BITBUCKET/Version+2) are used for appropriate actions.\r\n\r\n## Install\r\n\r\nTo install the most recent release from npm, run:\r\n\r\n    npm install bitbucket-rest\r\n\r\n\r\nA simple example to create a bitbucket client.\r\n\r\n```javascript\r\n  var bitbucket = require('bitbucket-rest');                                            \r\n  var client = bitbucket.connectClient({username : 'user', password : 'pass'});\r\n  \r\n  client.getRepoDetails({owner:'owner_name', repo_slug : 'repo_slug'}, function(res){\r\n     callback(res);\r\n  });\r\n  \r\n```\r\n\r\n\r\n## Documentation\r\n\r\n\r\n\r\n### Create New Repository\r\n\r\nTo create a new repository.\r\n\r\n\r\n```javascript\r\n  client.createRepo(repo, callback)\r\n```\r\n\r\nParameters of `repo`:\r\n\r\n  * `owner` owner of the repository - REQUIRED.\r\n  * `repo_slug` slug of the repository - REQUIRED.\r\n  * `name` name of the repository.\r\n  * `description` description for the repository.\r\n  * `is_private`  \r\n  * `forking_policy` fork policy values - *no_public_forks*, *allow_forks*, *no_forks*\r\n  * `language`\r\n  * `has_issues`\r\n  * `has_wiki`\r\n  * `scm`\r\n  \r\n\r\nThis returns following object:\r\n\r\n```javascript\r\n  { \r\n    status : 200,\r\n    data : [object]\r\n  }\r\n```\r\n\r\n\r\n### Get Repository Details\r\n\r\nTo get complete detail about the repository.\r\n\r\n\r\n```javascript\r\n  client.getRepoDetails(repo, callback)\r\n```\r\n\r\nParameters of `repo`:\r\n\r\n  * `owner` owner of the repository - REQUIRED.\r\n  * `repo_slug` slug of the repository - REQUIRED.\r\n  \r\n\r\nThis returns following object:\r\n\r\n```javascript\r\n  { \r\n    status : 200,\r\n    data : [object]\r\n  }\r\n```\r\n\r\n\r\n\r\n\r\n### Update Repository Details\r\n\r\nTo update the details of the repository.\r\n\r\n\r\n```javascript\r\n  client.updateRepoDetails(repo, callback)\r\n```\r\n\r\nParameters of `repo`:\r\n\r\n  * `owner` owner of the repository - REQUIRED.\r\n  * `repo_slug` slug of the repository - REQUIRED.\r\n  * `name` name of the repository.\r\n  * `description` description for the repository.\r\n  * `is_private` \r\n  * `forking_policy` fork policy values - *no_public_forks*, *allow_forks*, *no_forks*\r\n  * `language`\r\n  * `scm`\r\n\r\nThis returns following object:\r\n\r\n```javascript\r\n  { \r\n    status : 200,\r\n    data : [object]\r\n  }\r\n```\r\n\r\n\r\n\r\n\r\n### Delete a Repository\r\n\r\nTo delete a repository.\r\n\r\n\r\n```javascript\r\n  client.deleteRepo(repo, callback)\r\n```\r\n\r\nParameters of `repo`:\r\n\r\n  * `owner` owner of the repository - REQUIRED.\r\n  * `repo_slug` slug of the repository - REQUIRED.\r\n  \r\n\r\nThis returns following object:\r\n\r\n```javascript\r\n  { \r\n    status : 204,\r\n    data : undefined\r\n  }\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Fork a Repository\r\n\r\nTo fork a repository.\r\n\r\n\r\n```javascript\r\n  client.forkRepo(repo, forkRepo, callback)\r\n```\r\n\r\nParameters of `repo`:\r\n\r\n  * `owner` owner of the repository - REQUIRED.\r\n  * `repo_slug` slug of the repository - REQUIRED.\r\n \r\n\r\nParameters of `forkRepo`:\r\n\r\n  * `name` name of the repository - REQUIRED.\r\n  * `description` description for the repository.\r\n  * `is_private` \r\n  * `language`\r\n  * `scm`\r\n\r\nThis returns following object:\r\n\r\n```javascript\r\n  { \r\n    status : 200,\r\n    data : [object]\r\n  }\r\n```\r\n\r\n\r\n\r\n\r\n### Get Fork List\r\n\r\nTo get list of forks of a repository.\r\n\r\n\r\n```javascript\r\n  client.getRepoForks(repo, callback)\r\n```\r\n\r\nParameters of `repo`:\r\n\r\n  * `owner` owner of the repository - REQUIRED.\r\n  * `repo_slug` slug of the repository - REQUIRED.\r\n  \r\n\r\nThis returns following object:\r\n\r\n```javascript\r\n  { \r\n    status : 200,\r\n    data : [object]\r\n  }\r\n```\r\n\r\n\r\n\r\n\r\n### Get Branches\r\n\r\nTo get branches of the repository.\r\n\r\n\r\n```javascript\r\n  client.getRepoBranches(repo, callback)\r\n```\r\n\r\nParameters of `repo`:\r\n\r\n  * `owner` owner of the repository - REQUIRED.\r\n  * `repo_slug` slug of the repository - REQUIRED.\r\n  \r\n\r\nThis returns following object:\r\n\r\n```javascript\r\n  { \r\n    status : 200,\r\n    data : [object]\r\n  }\r\n```\r\n\r\n\r\n\r\n\r\n\r\n### Get Main Branch\r\n\r\nTo get the main branch of a repository.\r\n\r\n\r\n```javascript\r\n  client.getRepoMainBranch(repo, callback)\r\n```\r\n\r\nParameters of `repo`:\r\n\r\n  * `owner` owner of the repository - REQUIRED.\r\n  * `repo_slug` slug of the repository - REQUIRED.\r\n  \r\n\r\nThis returns following object:\r\n\r\n```javascript\r\n  { \r\n    status : 200,\r\n    data : [object]\r\n  }\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Add Deployment-Key\r\n\r\nTo add deployment keys to a repository.\r\n\r\n\r\n```javascript\r\n  client.addRepoDeployKey(repo, callback)\r\n```\r\n\r\nParameters of `repo`:\r\n\r\n  * `owner` owner of the repository - REQUIRED.\r\n  * `repo_slug` slug of the repository - REQUIRED.\r\n  * `label` label to represent the key\r\n  * `key` RSA key generated by ssh keygen - REQUIRED\r\n  \r\n\r\nThis returns following object:\r\n\r\n```javascript\r\n  { \r\n    status : 200,\r\n    data : [object]\r\n  }\r\n```\r\n\r\n\r\n\r\n\r\n### Get Deployment-Keys\r\n\r\nTo get deployment keys of a repository.\r\n\r\n\r\n```javascript\r\n  client.getRepoDeployKeys(repo, callback)\r\n```\r\n\r\nParameters of `repo`:\r\n\r\n  * `owner` owner of the repository - REQUIRED.\r\n  * `repo_slug` slug of the repository - REQUIRED.\r\n  \r\n\r\nThis returns following object:\r\n\r\n```javascript\r\n  { \r\n    status : 200,\r\n    data : [object]\r\n  }\r\n```\r\n\r\n\r\n\r\n\r\n### Get Content of a Deployment-Key\r\n\r\nTo get the content of a deployment key of a repository.\r\n\r\n\r\n```javascript\r\n  client.getRepoDeployKeyContent(repo, callback)\r\n```\r\n\r\nParameters of `repo`:\r\n\r\n  * `owner` owner of the repository - REQUIRED.\r\n  * `repo_slug` slug of the repository - REQUIRED.\r\n  * `pk` key_id of the deployment-key - REQUIRED.\r\n  \r\n\r\nThis returns following object:\r\n\r\n```javascript\r\n  { \r\n    status : 200,\r\n    data : [object]\r\n  }\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Delete a Deployment-Key\r\n\r\nTo delete a deployment key of a repository.\r\n\r\n\r\n```javascript\r\n  client.deleteRepoDeployKey(repo, callback)\r\n```\r\n\r\nParameters of `repo`:\r\n\r\n  * `owner` owner of the repository - REQUIRED.\r\n  * `repo_slug` slug of the repository - REQUIRED.\r\n  * `pk` key_id of the deployment-key - REQUIRED.\r\n  \r\n\r\nThis returns following object:\r\n\r\n```javascript\r\n  { \r\n    status : 204,\r\n    data : undefined\r\n  }\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Add Hook Service\r\n\r\nTo add a hook service to a repository.\r\n\r\n\r\n```javascript\r\n  client.addRepoHook(repo, callback)\r\n```\r\n\r\nParameters of `repo`:\r\n\r\n  * `owner` owner of the repository - REQUIRED.\r\n  * `repo_slug` slug of the repository - REQUIRED.\r\n  * `type` hook type ex.*POST* (case sensitive)\r\n  * `URL` service url for which accepts post hook.\r\n  \r\n\r\nThis returns following object:\r\n\r\n```javascript\r\n  { \r\n    status : 200,\r\n    data : [object]\r\n  }\r\n```\r\n\r\n\r\n\r\n\r\n\r\n### Get Hook Services\r\n\r\nTo get the list of hook services of a repository.\r\n\r\n\r\n```javascript\r\n  client.getRepoHooks(repo, callback)\r\n```\r\n\r\nParameters of `repo`:\r\n\r\n  * `owner` owner of the repository - REQUIRED.\r\n  * `repo_slug` slug of the repository - REQUIRED.\r\n  \r\n\r\nThis returns following object:\r\n\r\n```javascript\r\n  { \r\n    status : 200,\r\n    data : [object]\r\n  }\r\n```\r\n\r\n\r\n\r\n\r\n### Get Content of a Hook Service\r\n\r\nTo get the content of a single hook service of a repository.\r\n\r\n\r\n```javascript\r\n  client.getRepoHookContent(repo, callback)\r\n```\r\n\r\nParameters of `repo`:\r\n\r\n  * `owner` owner of the repository - REQUIRED.\r\n  * `repo_slug` slug of the repository - REQUIRED.\r\n  * `id` hook service id - REQUIRED.\r\n  \r\n\r\nThis returns following object:\r\n\r\n```javascript\r\n  { \r\n    status : 200,\r\n    data : [object]\r\n  }\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Update of a Hook Service\r\n\r\nTo update a hook service of a repository.\r\n\r\n\r\n```javascript\r\n  client.updateRepoHook(repo, callback)\r\n```\r\n\r\nParameters of `repo`:\r\n\r\n  * `owner` owner of the repository - REQUIRED.\r\n  * `repo_slug` slug of the repository - REQUIRED.\r\n  * `id` hook service id - REQUIRED.\r\n  * `URL` service url for which accepts post hook.\r\n\r\n\r\nThis returns following object:\r\n\r\n```javascript\r\n  { \r\n    status : 200,\r\n    data : [object]\r\n  }\r\n```\r\n\r\n\r\n\r\n\r\n### Delete Content of a Hook Service\r\n\r\nTo delete a hook service of a repository.\r\n\r\n\r\n```javascript\r\n  client.deleteRepoHook(repo, callback)\r\n```\r\n\r\nParameters of `repo`:\r\n\r\n  * `owner` owner of the repository - REQUIRED.\r\n  * `repo_slug` slug of the repository - REQUIRED.\r\n  * `id` hook service id - REQUIRED.\r\n  \r\n\r\nThis returns following object:\r\n\r\n```javascript\r\n  { \r\n    status : 204,\r\n    data : undefined\r\n  }\r\n```\r\n\r\n\r\n\r\n\r\n",
  "readmeFilename": "README.md",
  "dist": {
    "shasum": "9d3dc2ad9f6aca2804d946b9f0820b69207a3d35",
    "tarball": "http://registry.npmjs.org/bitbucket-rest/-/bitbucket-rest-0.0.1.tgz"
  },
  "_npmVersion": "1.3.8",
  "_npmUser": {
    "name": "dhineshs",
    "email": "dinesh.jeph@gmail.com"
  },
  "maintainers": [
    {
      "name": "dhineshs",
      "email": "dinesh.jeph@gmail.com"
    }
  ],
  "directories": {},
  "_shasum": "9d3dc2ad9f6aca2804d946b9f0820b69207a3d35",
  "_resolved": "https://registry.npmjs.org/bitbucket-rest/-/bitbucket-rest-0.0.1.tgz"
}
