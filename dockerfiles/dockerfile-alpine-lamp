# Este archivo se tiene que ejecutar desde la raíz de GorillaJS.
# docker build -t gorillajs/lamp . -f dockerfiles/dockerfile-alpine-lamp

FROM gorillajs/alpine

MAINTAINER David Barreiros Ibáñez <hola@davidbarreiros.es>

RUN apk update && apk upgrade \
    && mkdir -p /run/apache2 \
    && apk add --no-cache apache2 apache2-utils apache2-ctl \
    && apk add --no-cache php7 php7-zlib php7-phar php7-apache2 php7-mysqli php7-curl php7-openssl php7-json php7-iconv php7-session \
    && apk add --no-cache mysql-client \
    && apk add --no-cache openrc \
    && rm -rf /var/cache/apk/* \
    && sed -i '/error_reporting/d' /etc/php7/php.ini \
    && echo 'error_reporting = E_ALL & ~E_NOTICE' >> /etc/php7/php.ini \
    && mkdir /etc/apache2/sites-enabled /etc/apache2/sites-available \
    && ln -s /etc/apache2/sites-available/default.conf /etc/apache2/sites-enabled/default.conf

COPY dockerfiles/apache-httpd.conf /etc/apache2/httpd.conf
COPY dockerfiles/waiting.html /var/www/localhost/index.html 
COPY dockerfiles/apache-vhost.conf /etc/apache2/sites-available/default.conf

